@using PagedList
@using PagedList.Mvc
@using ToChange.Models
@model ToChange.ViewModel.UserVM

@*Customer - Home*@

@{
    ViewBag.Title = "Home";
}

@*MyProducts Table*@
<br />
<div>

    @using (Html.BeginForm("SearchMyProducts", "User", FormMethod.Get))
    {
        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading clearfix">

                <h4 class="panel-title pull-left" style="font-size:30px; font-style:oblique;"><span class="glyphicon glyphicon-star"></span>My Products</h4>
                <div class="input-group">
                    @Html.TextBox("txtSearch", "", htmlAttributes: new
               {
                   @type = "search",
                   @class = "form-control shortInputSearch pull-right",
                   @autocomplete = "off",
                   @placeholder = "Filter, search products.."
               })
                    <div class="input-group-btn">
                        <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-search"></i></button>
                        <button onclick="Clear()" class="btn btn-primary"><i class="glyphicon glyphicon-remove-sign"></i></button>
                        <button onclick="location.href='@Url.Action("SearchMyProducts" , "User")'" type="button" class="btn btn-primary"><i class="glyphicon glyphicon-refresh"></i></button>
                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover table-responsive  table-condensed" style="width:100%">
                <tr style="text-align:center;">
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Product</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Category</span></h3>
                    </th>

                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Description</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Customer ID</span></h3>
                    </th>

                    <th> </th>

                </tr>
                @if (Model != null && Model.MyProducts.Count > 0)
                {

                    foreach (var item in Model.MyProducts)
                    {
                        <tr style="text-align:center;">
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.ProductName)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetCategoryName(item.CategoryID)</span>
                            </td>

                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.Description)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.CustomerID)</span>
                            </td>

                            <td class="col-lg-2">
                                <button type="button" class="btn btn-warning col-lg-3" onclick="OpenPopup(@websiteSettings.EDIT_PRODUCT , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-pencil"></span>Edit</button>
                                <button type="button" class="btn btn-info col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.VIEW_SINGLE_IMAGE , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-align-justify"></span>Details</button>
                                <button type="button" class="btn btn-danger col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.DELETE_PRODUCT , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-trash"></span>Delete</button>
                            </td>
                        </tr>
                    }
                }

            </table>
        </div>
    }


    <div style="text-align:center;">
        @Html.PagedListPager(Model.MyProducts, page => Url.Action("Pagination", new { page, tableID = websiteSettings.MYPRODUCTS_TABLE_ID }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
    </div>
</div>

@*Products Table*@
<br />
<div>

    @using (Html.BeginForm("SearchProducts", "User", FormMethod.Get))
    {
        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading clearfix">

                <h4 class="panel-title pull-left" style="font-size:30px; font-style:oblique;"><span class="glyphicon glyphicon-star"></span>Products</h4>
                <div class="input-group">
                    @Html.TextBox("txtSearch", "", htmlAttributes: new
                   {
                       @type = "search",
                       @class = "form-control shortInputSearch pull-right",
                       @autocomplete = "off",
                       @placeholder = "Filter, search products.."
                   })
                    <div class="input-group-btn">
                        <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-search"></i></button>
                        <button onclick="Clear()" class="btn btn-primary"><i class="glyphicon glyphicon-remove-sign"></i></button>
                        <button onclick="location.href='@Url.Action("SearchProducts" , "User")'" type="button" class="btn btn-primary"><i class="glyphicon glyphicon-refresh"></i></button>

                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover table-responsive  table-condensed" style="width:100%">
                <tr>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Product</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Category</span></h3>
                    </th>

                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Description</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Customer ID</span></h3>
                    </th>

                    <th> </th>
                </tr>
                @if (Model != null && Model.Products.Count > 0)
                {
                    foreach (var item in Model.Products)
                    {
                        <tr>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.ProductName)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetCategoryName(item.CategoryID)</span>
                            </td>

                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.Description)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.CustomerID)</span>
                            </td>


                            <td class="col-lg-2">
                                <button type="button" class="btn btn-info col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.VIEW_SINGLE_IMAGE , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-align-justify"></span>Details</button>
                                <button type="button" class="btn btn-primary col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.SEND_POKE_REQUEST , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-refresh"></span>Swap</button>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    }


    <div style="text-align:center;">
        @Html.PagedListPager(Model.Products, page => Url.Action("Pagination", new { page, tableID = websiteSettings.PRODUCTS_TABLE_ID }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
    </div>

</div>

@*Exchanges Table*@
<br />
<div>

    @using (Html.BeginForm("SearchExchanges", "User", FormMethod.Get))
    {
        <div class="panel panel-primary" style="width:100%">
            <div class="panel-heading clearfix">

                <h4 class="panel-title pull-left" style="font-size:30px; font-style:oblique;"><span class="glyphicon glyphicon-star"></span>Exchanges</h4>
                <div class="input-group">
                    @Html.TextBox("txtSearch", "", htmlAttributes: new
               {
                   @type = "search",
                   @class = "form-control shortInputSearch pull-right",
                   @autocomplete = "off",
                   @placeholder = "Filter, search exchanges.."
               })
                    <div class="input-group-btn">
                        <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-search"></i></button>
                        <button onclick="Clear()" class="btn btn-primary"><i class="glyphicon glyphicon-remove-sign"></i></button>
                        <button onclick="location.href='@Url.Action("SearchMyExchanges" , "User")'" type="button" class="btn btn-primary"><i class="glyphicon glyphicon-refresh"></i></button>
                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover table-responsive  table-condensed" style="width:100%">
                <tr>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Customer Name</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Product Name</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Description of the Product</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder"> Exchange With  </span></h3>
                    </th>

                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Customer Name</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Product Name</span></h3>
                    </th>
                    <th>
                        <h3 style="font-size:x-large"><span style="font-weight:bolder">Description of the Product</span></h3>
                    </th>

                </tr>
                @if (Model != null && Model.Exchanges.Count > 0)
                {
                    foreach (var item in Model.Exchanges)
                    {
                        <tr>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetCustomerName(item.FirstCustomerID)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetProductName(item.FirstProductID)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.FirstDescription)</span>
                            </td>

                            <td class="col-lg-1">
                                <span style="font-size: 17px;">Exchange With</span>
                            </td>


                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetCustomerName(item.SecondCustomerID)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@websiteSettings.GetProductName(item.SecondProductID)</span>
                            </td>
                            <td class="col-lg-1">
                                <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.SecondDescription)</span>
                            </td>

                        </tr>
                    }
                }

            </table>
        </div>
    }


    <div style="text-align:center;">
        @Html.PagedListPager(Model.Exchanges, page => Url.Action("Pagination", new { page, tableID = websiteSettings.EXCHANGES_TABLE_ID }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
    </div>
</div>

<script>


    function Clear() {
        $('#txtSearch').val("");
    }

</script>
