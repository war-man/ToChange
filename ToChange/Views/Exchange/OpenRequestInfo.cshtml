@model ToChange.ViewModel.UserVM
@using ToChange.Models
@using PagedList
@using PagedList.Mvc


@{
    ViewBag.Title = Model.recieverProduct.ProductName + " Swap Request";
}


<br />

<!-- Sender -->

@if (websiteSettings.CurrentUser.ID.Equals(Model.senderCustomer.ID))
{

    <div>
        @{
            var sentence = "";
            sentence = Model.recieverCustomer.FirstName + " accepted your request and send you Swap request for " + Model.senderProduct.ProductName;
        }
        <h4>@sentence</h4>
        <hr />
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.senderProduct.ID)

            <div class="form-group">
                <img style="margin-left:10%;" src="@Model.senderProduct.ProductImage" width="350" height="200" />
            </div>

            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.senderProduct.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.senderProduct.ProductName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", disabled = true } })
                    @Html.ValidationMessageFor(model => model.senderProduct.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.senderProduct.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" type="text" disabled="disabled" value="@websiteSettings.GetCategoryName(Model.senderProduct.CategoryID)" />
                    @Html.ValidationMessageFor(model => model.senderProduct.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.senderProduct.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.senderProduct.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", disabled = true } })
                    @Html.ValidationMessageFor(model => model.senderProduct.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model.recieverProduct != null && Model.senderProduct != null)
                    {
                        <input class="btn btn-success" style="width:125px;" value="Accept" onclick="location.href='@Url.Action("AcceptRequest", "Exchange", new { senderID = Model.senderCustomer.ID, receiverID = Model.recieverCustomer.ID, productID = Model.recieverProduct.ID })'" />
                    }
                    <input class="btn btn-danger" value="Reject" style="width:125px;" onclick="location.href='@Url.Action("RejectRequest", "Exchange", new { senderID = Model.senderCustomer.ID, receiverID = Model.recieverCustomer.ID, productID = Model.recieverProduct.ID })'" />
                </div>
            </div>
        </div>
        <br />

    </div>

            }

<!-- Reciever -->

@if (!websiteSettings.CurrentUser.ID.Equals(Model.senderCustomer.ID))
{
    var sentence = "";
    sentence = "Swap Request for " + Model.recieverProduct.ProductName + " from " + Model.senderCustomer.FirstName;
    <div>

        <h4>@sentence</h4>
        <hr />
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.recieverProduct.ID)

            <div class="form-group">
                <img style="margin-left:10%;" src="@Model.recieverProduct.ProductImage" width="350" height="200" />
            </div>

            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.recieverProduct.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.recieverProduct.ProductName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", disabled = true } })
                    @Html.ValidationMessageFor(model => model.recieverProduct.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.recieverProduct.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" type="text" disabled="disabled" value="@websiteSettings.GetCategoryName(Model.recieverProduct.CategoryID)" />
                    @Html.ValidationMessageFor(model => model.recieverProduct.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.recieverProduct.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.recieverProduct.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", disabled = true } })
                    @Html.ValidationMessageFor(model => model.recieverProduct.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model.senderProduct != null && Model.recieverProduct != null)
                {
                        <input class="btn btn-success" style="width:125px;" value="Accept" onclick="location.href='@Url.Action("AcceptRequest", "Exchange", new { senderID = Model.senderCustomer.ID, receiverID = Model.recieverCustomer.ID, productID = Model.recieverProduct.ID })'" />
                    }
                    <input class="btn btn-danger" value="Reject" style="width:125px;" onclick="location.href='@Url.Action("RejectRequest", "Exchange", new { senderID = Model.senderCustomer.ID, receiverID = Model.recieverCustomer.ID, productID = Model.recieverProduct.ID })'" />
                </div>
            </div>
        </div>

    </div>

}
<br />



<!-- Table Of Sender Products-->

@if (!websiteSettings.CurrentUser.ID.Equals(Model.senderCustomer.ID))
{
    <h3>You Can Choose One Of @Model.senderCustomer.FirstName products to swap with or cancel the request</h3>
    <br />


            <div>
                @using (Html.BeginForm("SearchProduct", "Exchange", FormMethod.Get))
                {
                    <div class="panel panel-primary" style="width:100%">
                        <div class="panel-heading clearfix">

                            <h4 class="panel-title pull-left" style="font-size:30px; font-style:oblique;"><span class="glyphicon glyphicon-star"></span>@Model.senderCustomer.FirstName Products</h4>
                            <div class="input-group">
                                @Html.TextBox("txtSearch", "", htmlAttributes: new
               {
                   @type = "search",
                   @class = "form-control shortInputSearch pull-right",
                   @autocomplete = "off",
                   @placeholder = "Filter, search items.."
               })
                                <div class="input-group-btn">
                                    <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-search"></i></button>
                                    <button onclick="Clear()" class="btn btn-primary"><i class="glyphicon glyphicon-remove-sign"></i></button>
                                    <button onclick="location.href='@Url.Action("SearchProduct", "Exchange")'" type="button" class="btn btn-primary"><i class="glyphicon glyphicon-refresh"></i></button>

                                </div>
                            </div>
                        </div>

                        <table class="table table-striped table-hover table-responsive  table-condensed" style="width:100%">
                            <tr>
                                <th>
                                    <h3 style="font-size:x-large"><span style="font-weight:bolder">Product</span></h3>
                                </th>
                                <th>
                                    <h3 style="font-size:x-large"><span style="font-weight:bolder">Category</span></h3>
                                </th>

                                <th>
                                    <h3 style="font-size:x-large"><span style="font-weight:bolder">Description</span></h3>
                                </th>
                                <th>
                                    <h3 style="font-size:x-large"><span style="font-weight:bolder">senderCustomer ID</span></h3>
                                </th>

                                <th> </th>
                            </tr>
                            @if (Model.Products != null && Model.Products.Count() > 0)
                            {
                                foreach (var item in Model.Products)
                                {
                                    <tr>
                                        <td class="col-lg-1">
                                            <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.ProductName)</span>
                                        </td>
                                        <td class="col-lg-1">
                                            <span style="font-size: 17px;">@websiteSettings.GetCategoryName(item.CategoryID)</span>
                                        </td>

                                        <td class="col-lg-1">
                                            <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.Description)</span>
                                        </td>
                                        <td class="col-lg-1" style="text-align:center;">
                                            <span style="font-size: 17px;">@Html.DisplayFor(modelItem => item.CustomerID)</span>
                                        </td>


                                        <td class="col-lg-3">
                                            <button type="button" class="btn btn-info col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.VIEW_SINGLE_IMAGE , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-align-justify"></span>Details</button>
                                            <button type="button" class="btn btn-primary col-lg-3 col-lg-offset-1" onclick="OpenPopup(@websiteSettings.RE_SEND_POKE_REQUEST , @item.ID)"><span style="margin-right: 5px" class="glyphicon glyphicon-refresh"></span>Request</button>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>

                    <div style="text-align:center;">
                        @Html.PagedListPager(Model.Products, page => Url.Action("Pagination", new { page }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
                    </div>
                }
            </div>

}
<script>


    function Clear() {
        $('#txtSearch').val("");
    }

</script>
