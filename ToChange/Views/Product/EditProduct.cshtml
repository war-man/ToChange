@using ToChange.Models
@model ToChange.Models.Product

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary">
        <div class="panel-heading">
            @if (Model != null)
            {
                <h4 style="text-align:center;">Edit @Model.ProductName Details</h4>
            }
        </div>
        <div class="panel-body">
            <fieldset id="formData">

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CategoryID", @websiteSettings.GetDropDownList(), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control pull-left", autocomplete = "off", placeholder = "Choose an Image" } })
                            <label for="imgBrowse" style="margin-left:15px;" class="btn btn-primary">Select Image</label>
                            <input id="imgBrowse" onchange="UploadImage()" style="visibility:hidden;" class="pull-right" type="file">
                            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" value="Apply Changes" class="btn btn-success" onclick="Submit()" />
                            <input type="button" value="Cancel" class="btn btn-danger" data-dismiss="modal" />

                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
}


<script>

    function Submit() {


        $.ajax({

            type: 'POST',
            url: '/Product/EditProduct',
            data: $('#formData').serialize(),
            success: function (data) {
                if (!data.status)
                    alert(data.msg);
                location.reload();
            }

        });
    }

    function UploadImage() {

        var file = $("#imgBrowse").get(0).files;
        var data = new FormData();
        data.append("ImageFile", file[0]);

        $.ajax({
            type: 'POST',
            url: '/Product/UploadImage',
            data: data,
            ContentType: false,
            processData: false,
            success: function (result) {
                if (result.status) {
                    $('#ProductImage').val(result.path);
                    alert('Picture Uploaded Successfully.');
                } else {
                    alert(result.path);
                }
            }

        });
    }

    document.getElementById("ProductName").focus();

</script>